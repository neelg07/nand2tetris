// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:

    /**
     * If address[14] == 0, goto RAM16k chip,
     * else goto I/O devices (SCREEN || KBD)
    */

    DMux(in=load, sel=address[14], a=ramLoad, b=ioLoad);
    RAM16K(in=in, load=ramLoad, address=address[0..13], out=ramOut);

    /**
     * If ANY bits output by Keyboard == 1, access KBD register,
     * else access SCREEN 
    */

    Keyboard(out=kbdInput, out[0..7]=first, out[8..15]=second);
    Or8Way(in=first, out=firstOr);
    Or8Way(in=second, out=secondOr);
    Or(a=firstOr, b=secondOr, out=kbdUse);

    DMux(in=ioLoad, sel=kbdUse, a=screenLoad, b=kbdLoad);
    Screen(in=in, load=screenLoad, address=address[0..12], out=screenOut);

    Register(in=kbdInput, load=kbdUse, out=kbdOut);

    Mux16(a=screenOut, b=kbdOut, sel=kbdUse, out=ioOutput);
    Mux16(a=ramOut, b=ioOutput, sel=address[14], out=out);
}